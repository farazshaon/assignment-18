// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id              BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  firstName       String           @db.VarChar(50)
  middleName      String           @db.VarChar(50)
  lastName        String           @db.VarChar(50)
  mobile          String           @db.VarChar(15)
  email           String           @db.VarChar(50)
  passwordHash    String           @db.VarChar(32)
  registerAt      DateTime         @default(now())   @db.Timestamp(0)
  lastLogin       DateTime         @default(now())   @db.Timestamp(0)
  intro           String           @db.TinyText
  profile         String           @db.Text

  post            post[]
}



model post {
  id             BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  authorId       BigInt         @unique        @db.UnsignedBigInt
  parentId       BigInt         @unique        @db.UnsignedBigInt
  title          String         @db.VarChar(75)
  metaTitle      String         @db.VarChar(100)
  slug           String         @db.VarChar(100)
  summary        String         @db.TinyText
  published      Boolean        @db.TinyInt
  createAt       DateTime       @default(now()) @db.Timestamp(0)
  updateAt       DateTime       @default(now()) @db.Timestamp(0)
  publishedAt    DateTime       @default(now()) @db.Timestamp(0)
  content        String         @db.Text
  user user @relation(fields: [authorId],references: [id],onDelete: Restrict,onUpdate:Cascade)

  post_comment   post_comment[]
  post_category  post_category[]
  post_meta      post_meta[]
  post_tag       post_tag[]       
}

model post_comment {
  id             BigInt  @id    @default(autoincrement()) @db.UnsignedBigInt
  postId         BigInt         @unique                   @db.UnsignedBigInt 
  title          String         @db.VarChar(100)
  published      Boolean        @db.TinyInt
  createAt       DateTime       @default(now())  @db.Timestamp(0)
  publishedAt    DateTime       @default(now())  @db.Timestamp(0)
  context        String         @db.Text
  post post @relation(fields: [postId],references: [id],onDelete: Restrict,onUpdate:Cascade)


}



model category {
  id             BigInt    @id     @default(autoincrement()) @db.UnsignedBigInt
  parentId       BigInt  @unique   @db.UnsignedBigInt
  title          String            @db.VarChar(75)
  metaTitle      String            @db.VarChar(100)
  slug           String            @db.VarChar(100)
  content        String            @db.Text
  post_category  post_category[]
}

model post_category {
  postId         BigInt   @unique    @db.UnsignedBigInt
  categoryId     BigInt   @unique    @db.UnsignedBigInt
  category category @relation(fields: [categoryId],references: [id],onDelete: Restrict,onUpdate:Cascade)
  post post @relation(fields: [postId],references: [id],onDelete: Restrict,onUpdate:Cascade)
}

model tag {
  id             BigInt     @id    @default(autoincrement()) @db.UnsignedBigInt
  title          String            @db.VarChar(75)
  metaTitle      String            @db.VarChar(100)
  slug           String            @db.VarChar(100)
  content        String            @db.Text
  post_tag       post_tag[]
}

model post_tag {
  postId         BigInt   @unique    @db.UnsignedBigInt
  tagId          BigInt        @unique    @db.UnsignedBigInt
  tag tag @relation(fields: [tagId],references: [id],onDelete: Restrict,onUpdate:Cascade)

  post post @relation(fields: [postId],references: [id],onDelete: Restrict,onUpdate:Cascade)
}


model post_meta {
  id             BigInt    @id       @default(autoincrement()) @db.UnsignedBigInt
  postId         BigInt   @unique    @db.UnsignedBigInt
  key            String              @db.VarChar(50)
  content        String              @db.Text
  post post @relation(fields: [postId],references: [id],onDelete: Restrict,onUpdate:Cascade)
}